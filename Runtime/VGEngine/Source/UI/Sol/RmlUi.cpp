#include "RmlUi.h"
#include <RmlUi/Core/Event.h>
#include <RmlUi/Core/Context.h>
#include <RmlUi/Core/ElementDocument.h>
#include <RmlUi/Core/Input.h>

namespace RmlSol {

#define RMLUISOL_INPUTENUM(keyident)     \
	key_identifier[#keyident] = Rml::Input::KI_##keyident;

#define RMLUISOL_INPUTMODIFIERENUM(keymod) \
	key_modifier[#keymod] = Rml::Input::KM_##keymod;

	// where owner is the Element that we should look up information from
	struct RmlUiContextsProxy {
		void* nothing;
	};

	void RmlRmlUI::RegisterType(sol::state* lua, sol::table& rml)
	{
		rml.set_function("CreateContext", [](const std::string& name, const Rml::Vector2i& dimensions)
			{
				return Rml::CreateContext(name, dimensions);
			});
		rml.set_function("LoadFontFace", [](const std::string& file, bool fallback_face, int face_index)
			{
				return Rml::LoadFontFace(file, fallback_face, Rml::Style::FontWeight::Auto, face_index);
			});

		rml["contexts"] = sol::property(
			[]() -> RmlUiContextsProxy { return RmlUiContextsProxy{}; }
		);

		lua->new_usertype<RmlUiContextsProxy>("RmlEventParametersProxy",
			sol::meta_function::index, [](RmlUiContextsProxy& self, sol::object obj)  {
				if (obj.get_type() == sol::type::string)
				{
					return Rml::GetContext(obj.as<std::string>());
				}
				else
				{
					return Rml::GetContext(obj.as<int>());
				}
			}
		);

		CreateKeyIdentifierTable(rml);
		CreateKeyModifierTable(rml);
	}

	void RmlRmlUI::CreateKeyIdentifierTable(sol::table& rml)
	{

		sol::table key_identifier = rml["key_identifier"].get_or_create<sol::table>();
		
		RMLUISOL_INPUTENUM(UNKNOWN)
			RMLUISOL_INPUTENUM(SPACE)
			RMLUISOL_INPUTENUM(0)
			RMLUISOL_INPUTENUM(1)
			RMLUISOL_INPUTENUM(2)
			RMLUISOL_INPUTENUM(3)
			RMLUISOL_INPUTENUM(4)
			RMLUISOL_INPUTENUM(5)
			RMLUISOL_INPUTENUM(6)
			RMLUISOL_INPUTENUM(7)
			RMLUISOL_INPUTENUM(8)
			RMLUISOL_INPUTENUM(9)
			RMLUISOL_INPUTENUM(A)
			RMLUISOL_INPUTENUM(B)
			RMLUISOL_INPUTENUM(C)
			RMLUISOL_INPUTENUM(D)
			RMLUISOL_INPUTENUM(E)
			RMLUISOL_INPUTENUM(F)
			RMLUISOL_INPUTENUM(G)
			RMLUISOL_INPUTENUM(H)
			RMLUISOL_INPUTENUM(I)
			RMLUISOL_INPUTENUM(J)
			RMLUISOL_INPUTENUM(K)
			RMLUISOL_INPUTENUM(L)
			RMLUISOL_INPUTENUM(M)
			RMLUISOL_INPUTENUM(N)
			RMLUISOL_INPUTENUM(O)
			RMLUISOL_INPUTENUM(P)
			RMLUISOL_INPUTENUM(Q)
			RMLUISOL_INPUTENUM(R)
			RMLUISOL_INPUTENUM(S)
			RMLUISOL_INPUTENUM(T)
			RMLUISOL_INPUTENUM(U)
			RMLUISOL_INPUTENUM(V)
			RMLUISOL_INPUTENUM(W)
			RMLUISOL_INPUTENUM(X)
			RMLUISOL_INPUTENUM(Y)
			RMLUISOL_INPUTENUM(Z)
			RMLUISOL_INPUTENUM(OEM_1)
			RMLUISOL_INPUTENUM(OEM_PLUS)
			RMLUISOL_INPUTENUM(OEM_COMMA)
			RMLUISOL_INPUTENUM(OEM_MINUS)
			RMLUISOL_INPUTENUM(OEM_PERIOD)
			RMLUISOL_INPUTENUM(OEM_2)
			RMLUISOL_INPUTENUM(OEM_3)
			RMLUISOL_INPUTENUM(OEM_4)
			RMLUISOL_INPUTENUM(OEM_5)
			RMLUISOL_INPUTENUM(OEM_6)
			RMLUISOL_INPUTENUM(OEM_7)
			RMLUISOL_INPUTENUM(OEM_8)
			RMLUISOL_INPUTENUM(OEM_102)
			RMLUISOL_INPUTENUM(NUMPAD0)
			RMLUISOL_INPUTENUM(NUMPAD1)
			RMLUISOL_INPUTENUM(NUMPAD2)
			RMLUISOL_INPUTENUM(NUMPAD3)
			RMLUISOL_INPUTENUM(NUMPAD4)
			RMLUISOL_INPUTENUM(NUMPAD5)
			RMLUISOL_INPUTENUM(NUMPAD6)
			RMLUISOL_INPUTENUM(NUMPAD7)
			RMLUISOL_INPUTENUM(NUMPAD8)
			RMLUISOL_INPUTENUM(NUMPAD9)
			RMLUISOL_INPUTENUM(NUMPADENTER)
			RMLUISOL_INPUTENUM(MULTIPLY)
			RMLUISOL_INPUTENUM(ADD)
			RMLUISOL_INPUTENUM(SEPARATOR)
			RMLUISOL_INPUTENUM(SUBTRACT)
			RMLUISOL_INPUTENUM(DECIMAL)
			RMLUISOL_INPUTENUM(DIVIDE)
			RMLUISOL_INPUTENUM(OEM_NEC_EQUAL)
			RMLUISOL_INPUTENUM(BACK)
			RMLUISOL_INPUTENUM(TAB)
			RMLUISOL_INPUTENUM(CLEAR)
			RMLUISOL_INPUTENUM(RETURN)
			RMLUISOL_INPUTENUM(PAUSE)
			RMLUISOL_INPUTENUM(CAPITAL)
			RMLUISOL_INPUTENUM(KANA)
			RMLUISOL_INPUTENUM(HANGUL)
			RMLUISOL_INPUTENUM(JUNJA)
			RMLUISOL_INPUTENUM(FINAL)
			RMLUISOL_INPUTENUM(HANJA)
			RMLUISOL_INPUTENUM(KANJI)
			RMLUISOL_INPUTENUM(ESCAPE)
			RMLUISOL_INPUTENUM(CONVERT)
			RMLUISOL_INPUTENUM(NONCONVERT)
			RMLUISOL_INPUTENUM(ACCEPT)
			RMLUISOL_INPUTENUM(MODECHANGE)
			RMLUISOL_INPUTENUM(PRIOR)
			RMLUISOL_INPUTENUM(NEXT)
			RMLUISOL_INPUTENUM(END)
			RMLUISOL_INPUTENUM(HOME)
			RMLUISOL_INPUTENUM(LEFT)
			RMLUISOL_INPUTENUM(UP)
			RMLUISOL_INPUTENUM(RIGHT)
			RMLUISOL_INPUTENUM(DOWN)
			RMLUISOL_INPUTENUM(SELECT)
			RMLUISOL_INPUTENUM(PRINT)
			RMLUISOL_INPUTENUM(EXECUTE)
			RMLUISOL_INPUTENUM(SNAPSHOT)
			RMLUISOL_INPUTENUM(INSERT)
			RMLUISOL_INPUTENUM(DELETE)
			RMLUISOL_INPUTENUM(HELP)
			RMLUISOL_INPUTENUM(LWIN)
			RMLUISOL_INPUTENUM(RWIN)
			RMLUISOL_INPUTENUM(APPS)
			RMLUISOL_INPUTENUM(POWER)
			RMLUISOL_INPUTENUM(SLEEP)
			RMLUISOL_INPUTENUM(WAKE)
			RMLUISOL_INPUTENUM(F1)
			RMLUISOL_INPUTENUM(F2)
			RMLUISOL_INPUTENUM(F3)
			RMLUISOL_INPUTENUM(F4)
			RMLUISOL_INPUTENUM(F5)
			RMLUISOL_INPUTENUM(F6)
			RMLUISOL_INPUTENUM(F7)
			RMLUISOL_INPUTENUM(F8)
			RMLUISOL_INPUTENUM(F9)
			RMLUISOL_INPUTENUM(F10)
			RMLUISOL_INPUTENUM(F11)
			RMLUISOL_INPUTENUM(F12)
			RMLUISOL_INPUTENUM(F13)
			RMLUISOL_INPUTENUM(F14)
			RMLUISOL_INPUTENUM(F15)
			RMLUISOL_INPUTENUM(F16)
			RMLUISOL_INPUTENUM(F17)
			RMLUISOL_INPUTENUM(F18)
			RMLUISOL_INPUTENUM(F19)
			RMLUISOL_INPUTENUM(F20)
			RMLUISOL_INPUTENUM(F21)
			RMLUISOL_INPUTENUM(F22)
			RMLUISOL_INPUTENUM(F23)
			RMLUISOL_INPUTENUM(F24)
			RMLUISOL_INPUTENUM(NUMLOCK)
			RMLUISOL_INPUTENUM(SCROLL)
			RMLUISOL_INPUTENUM(OEM_FJ_JISHO)
			RMLUISOL_INPUTENUM(OEM_FJ_MASSHOU)
			RMLUISOL_INPUTENUM(OEM_FJ_TOUROKU)
			RMLUISOL_INPUTENUM(OEM_FJ_LOYA)
			RMLUISOL_INPUTENUM(OEM_FJ_ROYA)
			RMLUISOL_INPUTENUM(LSHIFT)
			RMLUISOL_INPUTENUM(RSHIFT)
			RMLUISOL_INPUTENUM(LCONTROL)
			RMLUISOL_INPUTENUM(RCONTROL)
			RMLUISOL_INPUTENUM(LMENU)
			RMLUISOL_INPUTENUM(RMENU)
			RMLUISOL_INPUTENUM(BROWSER_BACK)
			RMLUISOL_INPUTENUM(BROWSER_FORWARD)
			RMLUISOL_INPUTENUM(BROWSER_REFRESH)
			RMLUISOL_INPUTENUM(BROWSER_STOP)
			RMLUISOL_INPUTENUM(BROWSER_SEARCH)
			RMLUISOL_INPUTENUM(BROWSER_FAVORITES)
			RMLUISOL_INPUTENUM(BROWSER_HOME)
			RMLUISOL_INPUTENUM(VOLUME_MUTE)
			RMLUISOL_INPUTENUM(VOLUME_DOWN)
			RMLUISOL_INPUTENUM(VOLUME_UP)
			RMLUISOL_INPUTENUM(MEDIA_NEXT_TRACK)
			RMLUISOL_INPUTENUM(MEDIA_PREV_TRACK)
			RMLUISOL_INPUTENUM(MEDIA_STOP)
			RMLUISOL_INPUTENUM(MEDIA_PLAY_PAUSE)
			RMLUISOL_INPUTENUM(LAUNCH_MAIL)
			RMLUISOL_INPUTENUM(LAUNCH_MEDIA_SELECT)
			RMLUISOL_INPUTENUM(LAUNCH_APP1)
			RMLUISOL_INPUTENUM(LAUNCH_APP2)
			RMLUISOL_INPUTENUM(OEM_AX)
			RMLUISOL_INPUTENUM(ICO_HELP)
			RMLUISOL_INPUTENUM(ICO_00)
			RMLUISOL_INPUTENUM(PROCESSKEY)
			RMLUISOL_INPUTENUM(ICO_CLEAR)
			RMLUISOL_INPUTENUM(ATTN)
			RMLUISOL_INPUTENUM(CRSEL)
			RMLUISOL_INPUTENUM(EXSEL)
			RMLUISOL_INPUTENUM(EREOF)
			RMLUISOL_INPUTENUM(PLAY)
			RMLUISOL_INPUTENUM(ZOOM)
			RMLUISOL_INPUTENUM(PA1)
			RMLUISOL_INPUTENUM(OEM_CLEAR)
	}

	void RmlRmlUI::CreateKeyModifierTable(sol::table& rml)
	{
		sol::table key_modifier = rml["key_modifier"].get_or_create<sol::table>();

		RMLUISOL_INPUTMODIFIERENUM(CTRL)
		RMLUISOL_INPUTMODIFIERENUM(SHIFT)
		RMLUISOL_INPUTMODIFIERENUM(ALT)
		RMLUISOL_INPUTMODIFIERENUM(META)
		RMLUISOL_INPUTMODIFIERENUM(CAPSLOCK)
		RMLUISOL_INPUTMODIFIERENUM(NUMLOCK)
		RMLUISOL_INPUTMODIFIERENUM(SCROLLLOCK)
	}
}
